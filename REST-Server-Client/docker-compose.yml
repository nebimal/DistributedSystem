# docker-compose.yml
version: "3.9"

services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    restart: unless-stopped

  api1:
    build: .
    environment:
      # app server
      PORT: "8000"
      THREADS: "4"
      # shared DB (use the same on api2)
      DB_HOST: postgres
      DB_NAME: shop
      DB_USER: app
      DB_PASSWORD: example
      # common fallbacks if your app looks for these names instead:
      POSTGRES_HOST: postgres
      POSTGRES_DB: shop
      POSTGRES_USER: app
      POSTGRES_PASSWORD: example
      # shared cache (if your app uses redis for sessions/cache/rate limit)
      REDIS_HOST: redis
      REDIS_PORT: "6379"
    depends_on:
      - postgres
      - redis
    expose:
      - "8000"
    restart: unless-stopped

  api2:
    build: .
    environment:
      PORT: "8000"
      THREADS: "4"
      DB_HOST: postgres
      DB_NAME: shop
      DB_USER: app
      DB_PASSWORD: example
      POSTGRES_HOST: postgres
      POSTGRES_DB: shop
      POSTGRES_USER: app
      POSTGRES_PASSWORD: example
      REDIS_HOST: redis
      REDIS_PORT: "6379"
    depends_on:
      - postgres
      - redis
    expose:
      - "8000"
    restart: unless-stopped

  redis:
    image: redis:7
    restart: unless-stopped

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: example
      POSTGRES_DB: shop
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  pgdata:
